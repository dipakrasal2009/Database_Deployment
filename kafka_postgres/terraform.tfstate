{
  "version": 4,
  "terraform_version": "1.13.2",
  "serial": 28,
  "lineage": "856e9ea5-6187-2bf1-69de-28cd2c917643",
  "outputs": {
    "deployment_status": {
      "value": {
        "deployed_components": [
          "postgresql",
          "kafka"
        ],
        "kafka_deployed": true,
        "namespace": "devops-openshift",
        "postgresql_deployed": true
      },
      "type": [
        "object",
        {
          "deployed_components": [
            "list",
            "string"
          ],
          "kafka_deployed": "bool",
          "namespace": "string",
          "postgresql_deployed": "bool"
        }
      ]
    },
    "kafka_connection": {
      "value": {
        "bootstrap_servers": "my-kafka.devops-openshift.svc.cluster.local:9092",
        "internal_host": "my-kafka.devops-openshift.svc.cluster.local",
        "port": 9092
      },
      "type": [
        "object",
        {
          "bootstrap_servers": "string",
          "internal_host": "string",
          "port": "number"
        }
      ]
    },
    "postgresql_connection": {
      "value": {
        "database": "mydatabase",
        "host": "postgresql.devops-openshift.svc.cluster.local",
        "password_secret": "postgresql",
        "port": 5432,
        "username": "postgres"
      },
      "type": [
        "object",
        {
          "database": "string",
          "host": "string",
          "password_secret": "string",
          "port": "number",
          "username": "string"
        }
      ]
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kafka",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kafka",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "my-kafka",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "4.0.0",
                "chart": "kafka",
                "first_deployed": 1757913492,
                "last_deployed": 1757913492,
                "name": "my-kafka",
                "namespace": "devops-openshift",
                "notes": "CHART NAME: kafka\nCHART VERSION: 32.4.3\nAPP VERSION: 4.0.0\n\nâš  WARNING: Since August 28th, 2025, only a limited subset of images/charts are available for free.\n    Subscribe to Bitnami Secure Images to receive continued support and security updates.\n    More info at https://bitnami.com and https://github.com/bitnami/containers/issues/83267\n\n** Please be patient while the chart is being deployed **\n\nKafka can be accessed by consumers via port 9092 on the following DNS name from within your cluster:\n\n    my-kafka.devops-openshift.svc.cluster.local\n\nEach Kafka broker can be accessed by producers via port 9092 on the following DNS name(s) from within your cluster:\n\n    my-kafka-controller-0.my-kafka-controller-headless.devops-openshift.svc.cluster.local:9092\n    my-kafka-controller-1.my-kafka-controller-headless.devops-openshift.svc.cluster.local:9092\n    my-kafka-controller-2.my-kafka-controller-headless.devops-openshift.svc.cluster.local:9092\n\nThe CLIENT listener for Kafka client connections from within your cluster have been configured with the following security settings:\n    - SASL authentication\n\nTo connect a client to your Kafka, you need to create the 'client.properties' configuration files with the content below:\n\nsecurity.protocol=SASL_PLAINTEXT\nsasl.mechanism=SCRAM-SHA-256\nsasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \\\n    username=\"user1\" \\\n    password=\"$(kubectl get secret my-kafka-user-passwords --namespace devops-openshift -o jsonpath='{.data.client-passwords}' | base64 -d | cut -d , -f 1)\";\n\nTo create a pod that you can use as a Kafka client run the following commands:\n\n    kubectl run my-kafka-client --restart='Never' --image docker.io/bitnami/kafka:4.0.0-debian-12-r10 --namespace devops-openshift --command -- sleep infinity\n    kubectl cp --namespace devops-openshift /path/to/client.properties my-kafka-client:/tmp/client.properties\n    kubectl exec --tty -i my-kafka-client --namespace devops-openshift -- bash\n\n    PRODUCER:\n        kafka-console-producer.sh \\\n            --producer.config /tmp/client.properties \\\n            --bootstrap-server my-kafka.devops-openshift.svc.cluster.local:9092 \\\n            --topic test\n\n    CONSUMER:\n        kafka-console-consumer.sh \\\n            --consumer.config /tmp/client.properties \\\n            --bootstrap-server my-kafka.devops-openshift.svc.cluster.local:9092 \\\n            --topic test \\\n            --from-beginning\n\nWARNING: There are \"resources\" sections in the chart not set. Using \"resourcesPreset\" is not recommended for production. For production installations, please set the following values according to your workload needs:\n  - controller.resources\n  - defaultInitContainers.prepareConfig.resources\n+info https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n",
                "revision": 1,
                "values": "{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":false,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"global\":{\"compatibility\":{\"openshift\":{\"adaptSecurityContext\":\"auto\"}}},\"persistence\":{\"size\":\"10Gi\",\"storageClass\":\"managed-csi\"},\"podSecurityContext\":{\"enabled\":false},\"replicaCount\":3,\"volumePermissions\":{\"enabled\":false},\"zookeeper\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"enabled\":false,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"podSecurityContext\":{\"enabled\":false},\"replicaCount\":3}}",
                "version": "32.4.3"
              }
            ],
            "name": "my-kafka",
            "namespace": "devops-openshift",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "oci://registry-1.docker.io/bitnamicharts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "containerSecurityContext.allowPrivilegeEscalation",
                "type": "",
                "value": "false"
              },
              {
                "name": "containerSecurityContext.capabilities.drop[0]",
                "type": "",
                "value": "ALL"
              },
              {
                "name": "containerSecurityContext.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "containerSecurityContext.runAsNonRoot",
                "type": "",
                "value": "true"
              },
              {
                "name": "containerSecurityContext.seccompProfile.type",
                "type": "",
                "value": "RuntimeDefault"
              },
              {
                "name": "global.compatibility.openshift.adaptSecurityContext",
                "type": "",
                "value": "auto"
              },
              {
                "name": "persistence.size",
                "type": "",
                "value": "10Gi"
              },
              {
                "name": "persistence.storageClass",
                "type": "",
                "value": "managed-csi"
              },
              {
                "name": "podSecurityContext.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "replicaCount",
                "type": "",
                "value": "3"
              },
              {
                "name": "volumePermissions.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "zookeeper.containerSecurityContext.allowPrivilegeEscalation",
                "type": "",
                "value": "false"
              },
              {
                "name": "zookeeper.containerSecurityContext.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "zookeeper.containerSecurityContext.runAsNonRoot",
                "type": "",
                "value": "true"
              },
              {
                "name": "zookeeper.containerSecurityContext.seccompProfile.type",
                "type": "",
                "value": "RuntimeDefault"
              },
              {
                "name": "zookeeper.podSecurityContext.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "zookeeper.replicaCount",
                "type": "",
                "value": "3"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 900,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "32.4.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "postgresql",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "postgresql",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "postgresql",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "17.6.0",
                "chart": "postgresql",
                "first_deployed": 1757913491,
                "last_deployed": 1757913491,
                "name": "postgresql",
                "namespace": "devops-openshift",
                "notes": "\nCHART NAME: postgresql\nCHART VERSION: 16.7.27\nAPP VERSION: 17.6.0\n\nâš  WARNING: Since August 28th, 2025, only a limited subset of images/charts are available for free.\n    Subscribe to Bitnami Secure Images to receive continued support and security updates.\n    More info at https://bitnami.com and https://github.com/bitnami/containers/issues/83267\n\n** Please be patient while the chart is being deployed **\n\nPostgreSQL can be accessed via port 5432 on the following DNS names from within your cluster:\n\n    postgresql.devops-openshift.svc.cluster.local - Read/Write connection\n\nTo get the password for \"postgres\" run:\n\n    export POSTGRES_PASSWORD=$(kubectl get secret --namespace devops-openshift postgresql -o jsonpath=\"{.data.postgres-password}\" | base64 -d)\n\nTo connect to your database run the following command:\n\n    kubectl run postgresql-client --rm --tty -i --restart='Never' --namespace devops-openshift --image docker.io/bitnami/postgresql:17.6.0-debian-12-r4 --env=\"PGPASSWORD=$POSTGRES_PASSWORD\" \\\n      --command -- psql --host postgresql -U postgres -d mydatabase -p 5432\n\n    \u003e NOTE: If you access the container using bash, make sure that you execute \"/opt/bitnami/scripts/postgresql/entrypoint.sh /bin/bash\" in order to avoid the error \"psql: local user with ID 1001} does not exist\"\n\nTo connect to your database from outside the cluster execute the following commands:\n\n    kubectl port-forward --namespace devops-openshift svc/postgresql 5432:5432 \u0026\n    PGPASSWORD=\"$POSTGRES_PASSWORD\" psql --host 127.0.0.1 -U postgres -d mydatabase -p 5432\n\nWARNING: The configured password will be ignored on new installation in case when previous PostgreSQL release was deleted through the helm command. In that case, old PVC will have an old password, and setting it through helm won't take effect. Deleting persistent volumes (PVs) will solve the issue.\n\nWARNING: There are \"resources\" sections in the chart not set. Using \"resourcesPreset\" is not recommended for production. For production installations, please set the following values according to your workload needs:\n  - primary.resources\n  - readReplicas.resources\n+info https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n",
                "revision": 1,
                "values": "{\"auth\":{\"database\":\"mydatabase\",\"username\":\"postgres\"},\"global\":{\"compatibility\":{\"openshift\":{\"adaptSecurityContext\":\"auto\"}}},\"primary\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":false,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"persistence\":{\"size\":\"5Gi\",\"storageClass\":\"managed-csi\"},\"podSecurityContext\":{\"enabled\":false}},\"shmVolume\":{\"enabled\":false},\"volumePermissions\":{\"enabled\":false}}",
                "version": "16.7.27"
              }
            ],
            "name": "postgresql",
            "namespace": "devops-openshift",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "oci://registry-1.docker.io/bitnamicharts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "auth.database",
                "type": "",
                "value": "mydatabase"
              },
              {
                "name": "auth.username",
                "type": "",
                "value": "postgres"
              },
              {
                "name": "global.compatibility.openshift.adaptSecurityContext",
                "type": "",
                "value": "auto"
              },
              {
                "name": "primary.containerSecurityContext.allowPrivilegeEscalation",
                "type": "",
                "value": "false"
              },
              {
                "name": "primary.containerSecurityContext.capabilities.drop[0]",
                "type": "",
                "value": "ALL"
              },
              {
                "name": "primary.containerSecurityContext.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "primary.containerSecurityContext.runAsNonRoot",
                "type": "",
                "value": "true"
              },
              {
                "name": "primary.containerSecurityContext.seccompProfile.type",
                "type": "",
                "value": "RuntimeDefault"
              },
              {
                "name": "primary.persistence.size",
                "type": "",
                "value": "5Gi"
              },
              {
                "name": "primary.persistence.storageClass",
                "type": "",
                "value": "managed-csi"
              },
              {
                "name": "primary.podSecurityContext.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "shmVolume.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "volumePermissions.enabled",
                "type": "",
                "value": "false"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 900,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "16.7.27",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "var.persistence_storage_class",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.persistence_storage_class",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.persistence_storage_size",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.persistence_storage_size",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.openshift_project_name",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.openshift_project_name",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.infrastructure",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.infrastructure",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.postgresql_username",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.postgresql_username",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "var.postgresql_database",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.postgresql_database",
          "status": "pass"
        }
      ]
    }
  ]
}
